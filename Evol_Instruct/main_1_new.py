import json
import random

from openai_access import call_chatgpt
# from depth import createConstraintsPrompt, createDeepenPrompt, createConcretizingPrompt, createReasoningPrompt
from depth import createDataPrompt , createExamplePrompt
from trans import transtyle , transtructure
from breadth import createBreadthPrompt
import os
from concurrent.futures import ThreadPoolExecutor, as_completed

# fr = open('alpaca_data_cleaned.json','r')
# all_objs = json.load(fr)


all_objs = []
str1 = '优点：爱学习，看书，1000~2000本书，90%都看过。市场，销售财务。看书比较杂，人文。国家形式，全球的形式\
1. 对商业的趋势判断，很感兴趣。\
2. 安静的时候，能量更大。\
----中----\
多把学到应用出来，不能再看书了。要开始读无字书（人）\
卢总前两-三年都是在反腐，我管辖范围内也有出问题的。\
---待提升---\
心理素质：有时候沉不住气\
更喜欢一个人待着\
'
# str2 = '19年5月到粤海大区，做交接和市场调研面临一些问题，从粤海过往销售来讲，挑战比较大，业绩完成困难，业绩达成，费用预算超支。在两年间，保障业绩的达成，来的时候30多亿，现在是53亿，明年第三，2025有希望成为规模第一的大区。我们还有一项艰巨的任务，大区经营上，我们预算缺口有1.6个亿，通过3年时间，各方面整合资源，实现业绩的同时，补平预算缺口。分子公司的经营管理，粤海过去是10家分子公司，实现利润指标，20年疫情对直营业务挑战较大，21年分子公司能实现年度预算，利润的部分。这几年的扭亏的额度比较大，亏损2000万，去年扭转。海南2000万亏损，结合海南自贸港的政策，把以前的分公司关掉，成立新的分公司，节约中后台成本，利用海南返税的政策。实现有盈利。\
# 深圳市场，以前公司投资22个点到15个点，节约了大量的费用投资。\
# 有点：长期坚持，大区经理做了十多年，依然保持一份积极正能量心态，激情和活力。\
# 待发展：突破认知边界，更加能够激进式创新。\
# '
all_objs.append(str1)
# all_objs.append(str2)


def getevolprompt(instruction, type):
    """
    输入instruction 以及增广类型
    返回变换之后的文字
    
    """
    if type=='example' :
        return createExamplePrompt(instruction)
    elif type == 'data':
        return createDataPrompt(instruction)
    elif type == 'style':
        return transtyle(instruction)
    elif type == 'structure' :
        return transtructure(instruction)
    elif type == 'bread' :
        return createBreadthPrompt(instruction)
    else:
        print('use con,deep,concret,reason,bread plz')


def augment(types, num, instruction):
    """
    输入增广选择types 增广数量 num  要增广的 instruction
    返回一个list 里边是增广结果
    """
    evol_objs = []
    for i in range(0,num):
        print(i)
        type = random.choice(types)
        selected_evol_prompt = getevolprompt(instruction , type)
        evol_instruction = call_chatgpt(selected_evol_prompt)
        evol_objs.append({"type":type,"evol_prompt":evol_instruction})
    return evol_objs

one_1 = '我在2019年5月加入粤海大区，负责交接和市场调研。在面临一些问题时，我发现从粤海以往的销售情况来看，挑战比较大，完成业绩变得困难，同时费用预算也超支了。然而，在过去的两年里，我成功保障了业绩的达成。当我加入时，销售额只有30多亿，而现在已经增长到53亿。我对明年第三季度有望成为规模最大的大区充满期待。此外，我们还面临着一个艰巨的任务，即大区经营预算有1.6亿的缺口。为了弥补这个缺口，我计划在未来三年内整合各方面的资源，实现业绩的同时也平衡预算。在分子公司的经营管理方面，粤海过去有10家分子公司，实现了利润指标。然而，2020年疫情对直营业务造成了很大的挑战，但2021年分子公司有望实现年度预算的利润部分。近几年，我们成功扭亏，去年扭转了2000万的亏损。海南分公司也亏损了2000万，为了节约中后台成本，我们决定关闭以前的分公司，并成立新的分公司，同时利用海南自贸港政策的返税政策。这样我们就能实现盈利。在深圳市场方面，我们成功将投资点从22个减少到15个，从而节约了大量的费用投资。总的来说，我的优点是长期坚持，作为大区经理已经做了十多年，但依然保持着积极正能量的心态，充满激情和活力。然而，我还有待发展的地方是突破认知边界，更加能够激进式创新。'


four_1_1 = '在过去的一年中，我在业务节奏和业绩目标达成方面取得了很大的成就。特仑苏小醇等核心产品的销售业绩增长非常可观，特仑苏在全国范围内排名第一。我们聚焦于广东省的珠三角地区，这里占据了60%的人口和70%的经济份额，深圳和广州市场贡献了50%的生意。通过专注于核心城市和核心产品，我们成功提升了广州和深圳的市场份额，这为我们带来了谈判话语权、市场溢价空间和带货能力。然而，云南、贵州和广西这三个省份的市场差异较大，我们需要根据当地情况进行销售策略的调整。为了满足云南市场的需求，我们计划在该地建立工厂。另外，广东也需要增加产能，我们计划在清远建立第二个工厂。此外，我们还计划在广东建立研发中心，因为深圳是全国最年轻的城市，这里有很大的创新潜力。对于明年的挑战，我们需要完成530亿元的业绩指标，并在深圳市场整体上超越竞争对手，缩小广州市场份额的差距。我们还需要在每个城市突破市场份额，开发60-100个一级客户，并持续推进传统渠道网络搭建。虽然疫情和经济发展挑战会对开发客户造成一定困难，但我们相信通过产品聚焦、传统渠道的贡献以及城市店仓销售模式的推进，我们能够实现盈利并突破市场份额。'

four_1_2 = '在推行“消费者第一”的过程中，我在过去的一年中遇到了一些困难时刻。有时候，合作伙伴和经销商的盈利能力对业绩的驱动非常重要，所以我必须与他们建立良好的合作关系，并深入了解他们的经营情况。我要求我的团队关注这一点，并与合作伙伴和经销商保持密切联系，以确保我们能够共同实现以客户为中心的目标。'

four_2_1 = '我认为我们的团队目前在运转方面还有一些弱势区域。我们已经增加了CBU业务的布局和品类布局，并选拔了一些年轻人加入团队。然而，在儿童奶品类和其他企业方面，我们的关注度还不够高。考虑到广东人口众多且出生率较高，我们需要更加关注这个市场。另外，质量和市场秩序的调整也需要直接管理，因为食品安全问题对我们来说非常重要。我们还需要整合运营和行销，以使目标资源更加高效协同。此外，我们还需要将业务重心放在一线，并适当优化和精简大区销售支持服务。'


four_2_2 = '我认为团队的氛围目前非常好。我总是通过激励和鼓励团队成员来提升他们的敬业度和工作动力。我会与团队分享行业的最新动态和公司的政策，以保持大家对工作的兴趣和热情。此外，我也会以身作则，展示出对工作的专注和敬业精神，希望能够影响团队成员。我还会定期与团队进行沟通，分享有关工作的信息，以确保大家都能保持对工作的关注和投入。我相信这些做法有助于提升团队的敬业度，并维持大家的工作动力。'



four_2_3 = '我认为在人才选拔方面应该更加多元化，从全国范围内选拔人才，不仅限于某个地区。举例来说，我们有一位行销经理叫朱涛，比我小一点，出生于1986年，他经历了几年的历练，并多次轮岗。我认为他是一个很有潜力的接班人选，我们可以培养他成为一个区域负责人。对于大区经理的选拔，我认为最好是那些曾经在运营和分子公司担任过经理职位的人。我觉得考虑问题时要全面，不要偏激或单一。'



four_3_1 = '在我过去的工作经历中，我确实遇到过需要涉猎不熟悉领域的情况。例如，在加入粤海工作后，我面临着大区层面预算的缺口，而财务管理并不是我之前的专长。为了解决这个问题，我与分子公司的财务团队一起学习，并参与了财务和经营管理的培训课程。此外，在品牌管理方面，我之前并没有太多关注。然而，在广东工作的几年里，我通过市场走访和参加品牌管理方面的课程，建立了对市场和品牌管理的认知和意识。我相信通过不断学习和探索，我能够应对并克服遇到的挑战。'



four_3_2 = '在过去一年的工作中，我主要负责优化工作流程，特别是市场秩序的管理。通过大力推动市场秩序的治理，我们成功减少了窜货现象的发生，并保护了各地的价格。这对渠道商来说是有利的，也对我们的经营结果有帮助。举个例子，我们的特仑苏产品每个月能卖出500万箱，通过上调价格2块钱，我们多赚了1000万的毛利，一年就是一个亿的毛利。如果下调1块钱，一个月就会少1000万的渠道利润，一年就没有了。所以我们非常注重管控市场秩序和价格。为了解决内部挑战，我们对过去存在窜货问题的经销商进行调研，核实虚假程度，并进行适当的调整。我们根据地区的人口、经济水平和市场网点等因素，测算出正常销售的数量。同时，根据与竞争对手的市场份额，我们也确定了一个合理的销售目标。如果某个地区的实际销售量超过了正常销售量，我们会排除其中的虚假成分。对于存在窜货问题的地方，我们会约谈城市经理，要求他们改善管理，确保遵守制度和食品安全法规。如果发现有窜货行为，我们会进行调查并开除相关人员。我们还会调动社会资源，对中间商链条进行侦察，以建立起一个不容窜货的文化。'


four_4_1 = '在过去的一年中，我不断追踪和落实目标，以应对世界经济格局的变化和疫情的发展。我遇到了许多艰难时刻，但我通过努力和付出代价，成功地实现了这些挑战目标。'



six_1 = '在日常沟通中，我努力确保团队在销售会议和开年第一次大会上都能够理解和共识我们的思想价值观。然而，在一些阶段性沟通中，我感觉团队在思想和认识上有些松懈。我认为我们需要通过点滴的沟通来滋养每个团队成员，让他们能够充分展现自己的潜力。例如，在本土疫情引起关注的时候，我与团队分享了相关信息，并且得到了很高的接受度。同样，在春节期间，当消费者购买需求旺盛时，我再次与团队分享了相关信息。我相信我们的业务行为和指导动作不应该仅仅是单向告知，而是要指导我们的团队成员充分发挥他们的能力和潜力。\
\
在让牛人绽放方面，我在选人用人中始终坚持让年轻人有机会上位，并且给予他们更多的机会来承担更多的工作。我相信只有让牛人充分发挥他们的能力，我们的团队才能取得更好的成绩。\
\
在践行消费者第一的价值观方面，我在权益分配时始终把消费者放在首位，无论是与经销商、客户、员工还是零售合作伙伴的合作中。然而，在异想天开方面，我认为我还有待提升。我有一些关于推动公司落地研发中心和区域营销的想法，但由于平时业务繁忙，我还没有能够充分推动这些想法的实施。我意识到两年时间过得很快，我希望在推动公司变革和RTM部署方面能够做得更好。'



seven_7_4 = '我认为在候选人的发展方向方面，有两个非常重要的方面。首先，他可以考虑从事全国性的销售管理工作，这是一个相对缺乏人才的领域。其次，他可以在品牌市场方面发展自己，因为这个领域也存在一定的缺口。至于发展方式，我建议他可以通过扩大自己的职责范围，承担总部的一些职责来实现。此外，他还可以通过轮岗和兼职的方式与销售管理事业部进行合作，以获得更多的经验和机会。'

num = 10

text_list = [one_1, four_1_1, four_1_2, four_2_1, four_2_2, four_2_3, four_3_1, four_3_2, four_4_1, six_1, seven_7_4]
name_list = ['one_1', 'four_1_1', 'four_1_2', 'four_2_1', 'four_2_2', 'four_2_3', 'four_3_1', 'four_3_2', 'four_4_1', 'six_1', 'seven_7_4']


# for index,text in enumerate(text_list):
#     aug = augment(types=['style','structure','bread'],num=num, instruction=text)
#     with open(f'result_1/{name_list[index]}.json', 'w', encoding='utf-8') as f:
#         json.dump(aug, f, ensure_ascii=False, indent=4)
#     print(f'{index}/{num}')    

def process_task(index, text):
    aug = augment(types=['style', 'structure', 'bread'], num=num, instruction=text)
    file_path = f'result_1_new/{name_list[index]}.json'
    with open(file_path, 'w', encoding='utf-8') as f:
        json.dump(aug, f, ensure_ascii=False, indent=4)
    print(f'{index}/{len(text_list) - 1}')

# 使用 ThreadPoolExecutor 并行执行任务
with ThreadPoolExecutor() as executor:
    # 提交所有任务
    futures = {executor.submit(process_task, index, text): index for index, text in enumerate(text_list)}
    # 等待所有任务完成
    for future in as_completed(futures):
        future.result()  # 检查任务是否引发异常